// js/vk-init.js - –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω—ã–π —Ñ–∞–π–ª
(function() {
    'use strict';
    
    // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ VK Bridge –∏ DOM
    window.addEventListener('DOMContentLoaded', async function() {
        console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è VK Mini App...');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ VK Bridge
        if (typeof vkBridge === 'undefined') {
            console.log('üåê VK Bridge –Ω–µ –Ω–∞–π–¥–µ–Ω - —Ä–∞–±–æ—Ç–∞–µ–º –∫–∞–∫ —Å–∞–π—Ç');
            return;
        }
        
        try {
            // 1. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º VK Mini App
            await vkBridge.send('VKWebAppInit', {});
            console.log('‚úÖ VK Mini App –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
            
            // 2. –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
            const userInfo = await vkBridge.send('VKWebAppGetUserInfo', {});
            console.log('üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', userInfo);
            
            // 3. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è VK
            setupVKInterface();
            
            // 4. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Å–æ–±—ã—Ç–∏—è VK
            setupVKEvents();
            
            // 5. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ –≤—Å—ë —Ä–∞–±–æ—Ç–∞–µ—Ç
            showVKStatus('VK Mini App –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!');
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ VK:', error);
        }
    });
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –¥–ª—è VK
    function setupVKInterface() {
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è VK —Å—Ç–∏–ª–µ–π
        document.body.classList.add('vk-mini-app');
        
        // –°–∫—Ä—ã–≤–∞–µ–º –ª–∏—à–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è VK
        const elementsToHide = [
            'header', '.header', '.navbar', 
            '.site-header', '.main-header'
        ];
        
        elementsToHide.forEach(selector => {
            const element = document.querySelector(selector);
            if (element) {
                element.style.display = 'none';
                console.log(`üì± –°–∫—Ä—ã—Ç —ç–ª–µ–º–µ–Ω—Ç: ${selector}`);
            }
        });
        
        // –î–æ–±–∞–≤–ª—è–µ–º Safe Area –¥–ª—è —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
        addSafeAreaStyles();
        
        // –£–ª—É—á—à–∞–µ–º —Å–∫—Ä–æ–ª–ª –¥–ª—è VK
        improveScroll();
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ Safe Area
    function addSafeAreaStyles() {
        const style = document.createElement('style');
        style.textContent = `
            .vk-mini-app {
                padding-top: env(safe-area-inset-top, 0px);
                padding-bottom: env(safe-area-inset-bottom, 0px);
                padding-left: env(safe-area-inset-left, 0px);
                padding-right: env(safe-area-inset-right, 0px);
                min-height: 100vh;
                background: #ffffff;
            }
            
            .vk-mini-app .container {
                max-width: 100%;
                margin: 0 auto;
                padding: 16px;
            }
            
            /* –£–ª—É—á—à–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö */
            .vk-mini-app button, 
            .vk-mini-app .btn {
                touch-action: manipulation;
                min-height: 44px;
            }
        `;
        document.head.appendChild(style);
    }
    
    // –£–ª—É—á—à–∞–µ–º —Å–∫—Ä–æ–ª–ª –¥–ª—è VK
    function improveScroll() {
        document.body.style.overflow = 'auto';
        document.body.style.webkitOverflowScrolling = 'touch';
    }
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–æ–±—ã—Ç–∏–π VK
    function setupVKEvents() {
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
        window.addEventListener('popstate', function() {
            vkBridge.send('VKWebAppGoBack')
                .catch(error => console.log('–û—à–∏–±–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞:', error));
        });
        
        // –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –≤–∏–¥–∏–º–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        document.addEventListener('visibilitychange', function() {
            if (document.hidden) {
                vkBridge.send('VKWebAppSetSwipeSettings', { history: true })
                    .catch(error => console.log('–û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–≤–∞–π–ø–∞:', error));
            }
        });
        
        // –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Å–æ–±—ã—Ç–∏—è VK Bridge
        vkBridge.subscribe(function(event) {
            console.log('üì® –°–æ–±—ã—Ç–∏–µ VK:', event.detail);
            
            switch(event.detail.type) {
                case 'VKWebAppUpdateConfig':
                    handleConfigUpdate(event.detail.data);
                    break;
                case 'VKWebAppViewHide':
                    console.log('–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–∫—Ä—ã—Ç–æ');
                    break;
                case 'VKWebAppViewRestore':
                    console.log('–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
                    break;
            }
        });
    }
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    function handleConfigUpdate(config) {
        console.log('‚öôÔ∏è –û–±–Ω–æ–≤–ª–µ–Ω–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:', config);
        
        // –ú–µ–Ω—è–µ–º —Ç–µ–º—É –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        if (config.theme) {
            document.body.setAttribute('data-theme', config.theme);
        }
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å —Ä–∞–±–æ—Ç—ã VK
    function showVKStatus(message) {
        // –°–æ–∑–¥–∞–µ–º –Ω–µ–±–æ–ª—å—à–æ–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –≤ —É–≥–ª—É
        const statusDiv = document.createElement('div');
        statusDiv.style.cssText = `
            position: fixed;
            top: 10px;
            right: 10px;
            background: #4CAF50;
            color: white;
            padding: 5px 10px;
            border-radius: 12px;
            font-size: 10px;
            z-index: 10000;
            opacity: 0.9;
        `;
        statusDiv.textContent = 'VK ‚úì';
        statusDiv.title = message;
        
        document.body.appendChild(statusDiv);
        
        // –ê–≤—Ç–æ-—Å–∫—Ä—ã—Ç–∏–µ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(() => {
            statusDiv.style.opacity = '0';
            setTimeout(() => statusDiv.remove(), 1000);
        }, 3000);
        
        console.log('üì¢ ' + message);
    }
    
    // –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —Å–∫—Ä–∏–ø—Ç–∞—Ö
    window.VKApp = {
        // –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        showNotification: async function(message) {
            try {
                await vkBridge.send('VKWebAppShowNotification', { message });
            } catch (error) {
                console.log('–û—à–∏–±–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', error);
                alert(message); // Fallback
            }
        },
        
        // –û—Ç–∫—Ä—ã—Ç—å URL
        openURL: async function(url) {
            try {
                await vkBridge.send('VKWebAppOpenURL', { url });
            } catch (error) {
                console.log('–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è URL:', error);
                window.open(url, '_blank');
            }
        },
        
        // –ü–æ–¥–µ–ª–∏—Ç—å—Å—è
        share: async function(link, description = '') {
            try {
                await vkBridge.send('VKWebAppShare', { link, description });
            } catch (error) {
                console.log('–û—à–∏–±–∫–∞ —à–∞—Ä–∏–Ω–≥–∞:', error);
            }
        },
        
        // –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ
        getDeviceInfo: async function() {
            try {
                return await vkBridge.send('VKWebAppGetDeviceInfo', {});
            } catch (error) {
                console.log('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è device info:', error);
                return null;
            }
        }
    };
    
})();
